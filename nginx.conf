worker_processes  10;
error_log /dev/stdout info;

events {
  worker_connections 2048;
}

http {
  access_log /dev/stdout;

  server {
    listen 8080;

    location / {
      access_by_lua '
        local woothee = require "resty.woothee"
        local browser = woothee.parse(ngx.var.http_user_agent)

        if not browser or browser.category == "UNKNOWN" then
          ngx.log(ngx.ERR, "Not human")
          return ngx.exit(404)
        end

        local redis = require "resty.redis"
        local red = redis:new()

        red:set_timeout(5000)

        local ok, err = red:connect("127.0.0.1", 6379)
        if not ok then
          ngx.log(ngx.ERR, "failed to connect to redis: ", err)
          return ngx.exit(404)
        end

        local url, err = red:get(ngx.var.remote_addr)

        if not url or url == ngx.null then
          ngx.log(ngx.ERR, "redis not found", err)
          return ngx.exit(404)
        end

        local back_url, err = ngx.var.http_host .. ngx.var.request_uri

        return ngx.redirect(url .. "&back_url=" .. back_url, 301)
      ';
    }
  }
}
